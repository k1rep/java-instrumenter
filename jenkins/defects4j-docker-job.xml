<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.39">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.7.0"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.7.0">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>project</name>
          <description></description>
          <defaultValue>Time</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>version</name>
          <description></description>
          <defaultValue>1b</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>granularity</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>binary</string>
              <string>count</string>
              <string>chain</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>pipeline {
    agent {
        docker {
            image &apos;d4j&apos;
            args &apos;--user root&apos;
            customWorkspace &quot;workspace/${project}/${version}/${granularity}&quot;
        }
    }
    environment {
        AGENT_GRANULARITY = &quot;${granularity}&quot;
    }
    stages {
        stage(&apos;init&apos;) {
            steps {
                script {
                    currentBuild.displayName = &quot;${project}-${version}-${granularity}&quot;
                    currentBuild.description = &quot;project=${project}\nversion=${version}\ngranularity=${granularity}&quot;
                }
            }
        }
        stage(&apos;checkout&apos;) {
            steps {
                sh &apos;defects4j checkout -p ${project} -v ${version} -w .&apos;
            }
        }
        stage(&apos;compile&apos;) {
            steps {
                sh &apos;defects4j compile&apos;
            }
        }
        stage(&apos;test&apos;) {
            steps {
                sh &apos;defects4j test&apos;
            }
        }
        stage(&apos;archive&apos;) {
            steps {
                sh &apos;tar --remove-files -cvzf ${project}-${version}-${granularity}.tar.gz coverage/ failing_tests&apos;
            }
        }
        stage(&apos;cleanup&apos;) {
            steps {
                sh &apos;find . -mindepth 1 -maxdepth 1 ! -name ${project}-${version}-${granularity}.tar.gz -exec rm -r {} +&apos;
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>

